=> To Do
- Fix issue with internal date when restored on an account
- Add support for compression in the imap communication
- Send a fix for that to the imap guy and add a way to STORE esoteric keywords like the ones in GMAIL
- Optimize storage on metadata file

=> Thinking

- First element synching with a account against the database
=> the database needs an index file for each month directory
=> each email should also have a metadata file that contains => header info and the data file
=> 2 syncing ways => checking info such as labels mainly and syncing only data


Next Steps:
- start packaging
- start building the command line (full sync, incremental sync, mirror)
- Add proper logging

Commandline:
gmvault --sync --imap-server --login --passwd --db-dir 
gmvault --sync --imap-server --oauth-token --db-dir
gmvault --inc-sync --imap-server --oauth-token --db-dir
gmvault --quick-sync --imap-server --oauth-token --db-dir

gmvault --restore --imap-server --login --passwd --db-dir 
gmvault --restore --imap-server --oauth-token --db-dir

gmvault --mirror --type=s3 --token

NEXT => add restore mode,
     => add mirror mode,
     => create gui
     
     
 
strategy reconnect retry abort ?

Apparently it seems to be some corrupted messages (http://www.google.com/support/forum/p/gmail/thread?tid=1acf74d2c4c1ed46&hl=en)
This is worrying but the message should be flagged and maybe deleted later one.
Let's see. In any case, the exception needs to be catched in 

When Id is retrieved it is working. The problem is there when the data is retrieved


To Do 22-12-2012:
-----------------
1) sync_delete can be redone as all the gm_id are retrieved from the filesystem at once 
(test if it scales) => No need as scan all dirs is very fast (on linux at least)
2) instead of iterating on the remote gmail ids, iterate (with generator) by group of 30 elements on the
disk saved ids. This should scale for ever whatever the number of you have. 
3) Test disconnection and see what is going on (error generated)
4) Potentially add a reconnection mode (try to reconect 3 times before to quit) => Done for Fetch 
5) Add a way to restart from an imap id. Could be used when you have a very large mailbox and 
want to restart from the moment when it failed.
5.1) Add support for Chat emails => restore them in a default label. Give the possibility to name it.
6) add logging now otherwise it might be too late => PARTLY DONE
7) test why labels cannot be hierarchically recreated => DONE
7.1) Check the Internal Date on a restore: it doesn't seem to be set properly => DONE
7.2) Implement the restore => being tested
8) add oauth and a way to save the token.
8.1) add a way to add a restore label
8.2) encrypt email data with possibly a pure python method (if not too slow) => make it optional
8.3) work on win support
9) manage a .gmvault dir in your home
10) add progress bar and better logging outputs with verbose and non verbose mode
11) release v0.5 
12) add cloud saves
13) add Mac Gui, Linux or chrome GUI

Add XOAuth support
=================
run through in python
http://code.google.com/p/google-mail-xoauth-tools/wiki/XoauthDotPyRunThrough
python lib: https://github.com/simplegeo/python-oauth2
Also available in IMAPClient: http://imapclient.freshfoo.com/browser/imapclient/imapclient.py
 
Implement the restore emails
============================

See how to create tests

Check the gmail labels that already exists cannot be created (badly created)

06.01.12
--------
- Had to change the way email body was stored. Before it was in a json persisting struct.
It is not possible because of encoding issues. Problem with iso-81.. (latin encoding for
german letters). Now email body has it own file. 
- 

- Fix the internal date problem. The internal date cannot be set using the IMAP Internal date
definition as it is used in IMAPClient. The way to do it is to pass epoch seconds to imaplib.
I don't know why but it works. See if there is another way.


