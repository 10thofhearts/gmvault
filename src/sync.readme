

=> To Do
- Fix issue with internal date when restored on an account
- Add support for compression in the imap communication
- Send a fix for that to the imap guy and add a way to STORE esoteric keywords like the ones in GMAIL
- Optimize storage on metadata file

=> Thinking

- First element synching with a account against the database
=> the database needs an index file for each month directory
=> each email should also have a metadata file that contains => header info and the data file
=> 2 syncing ways => checking info such as labels mainly and syncing only data


Next Steps:
- start packaging
- start building the command line (full sync, incremental sync, mirror)
- Add proper logging

Commandline:
gmvault --sync --imap-server --login --passwd --db-dir 
gmvault --sync --imap-server --oauth-token --db-dir
gmvault --inc-sync --imap-server --oauth-token --db-dir
gmvault --quick-sync --imap-server --oauth-token --db-dir

gmvault --restore --imap-server --login --passwd --db-dir 
gmvault --restore --imap-server --oauth-token --db-dir

gmvault --mirror --type=s3 --token

NEXT => add restore mode,
     => add mirror mode,
     => create gui
     
     
 Error to catch when data cannot be retrieved:
 This was due to a connection problem (it should be handled in a better way)
 
 For some reason (maybe the server cuts the connection or something) you get an exception
 add a retry policy (try up to three times before to quit on error).
 
 Maybe redo the sync_delete as all the gm id are retrieve from filesystem (see if it scales)
 
 
 Traceback (most recent call last):
  File "gmv.py", line 189, in <module>
    bootstrap_run()
  File "gmv.py", line 180, in bootstrap_run
    gmvault.run(args)
  File "gmv.py", line 167, in run
    syncer.sync(args['request'])
  File "/home/aubert/Dev/projects/gmvault/src/gmvault.py", line 593, in sync
    self._create_update_sync(imap_ids, compress)
  File "/home/aubert/Dev/projects/gmvault/src/gmvault.py", line 536, in _create_update_sync
    data = self.src.fetch(id, GIMAPFetcher.GET_ALL_INFO)
  File "/home/aubert/Dev/projects/gmvault/src/gmvault.py", line 165, in fetch
    return self.server.fetch(a_ids, a_attributes)
  File "/home/aubert/local_python/lib/python2.6/site-packages/imapclient/imapclient.py", line 674, in fetch
    self._checkok('fetch', typ, data)
  File "/home/aubert/local_python/lib/python2.6/site-packages/imapclient/imapclient.py", line 790, in _checkok
    self._check_resp('OK', command, typ, data)
  File "/home/aubert/local_python/lib/python2.6/site-packages/imapclient/imapclient.py", line 775, in _check_resp
    raise self.Error('%s failed: %r' % (command, data[0]))
imaplib.error: fetch failed: 'Some messages could not be FETCHed (Failure)'

strategy reconnect retry abort ?


